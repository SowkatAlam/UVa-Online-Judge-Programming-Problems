/*
*************************************************
*                                               *
*                Sowkat ALam                    *
*                                               *
*    Email = sowkat.alam07@gmail.com            *
*                                               *
*                                               *
*************************************************
*/
#include <bits/stdc++.h>
#include<cstdio>
#include<sstream>
#include<cstdlib>
#include<cctype>
#include<cmath>
#include<algorithm>
#include<set>
#include<queue>
#include<stack>
#include<list>
#include<iostream>
#include<fstream>
#include<numeric>
#include<string>
#include<vector>
#include<cstring>
#include<map>
#include<iterator>

using namespace std;
#define endl '\n'
#define mp make_pair
#define pb push_back
#define PI acos(-1.0)
#define mod 1000000007
#define sqr(x) ((x)*(x))
#define LL long long int
#define sqrt(x) sqrt(abs(x))
#define sz(x) ((int) (x).size())
#define ULL unsigned long long int
#define read(x) freopen(x,"r",stdin)
#define set(x) memset(a,-1,sizeof(x))
#define write(x) freopen(x,"w",stdout)

#define FOR(x,a,n) for(int x=a;x<=n;x++)
#define vsort(v) sort(v.begin(),v.end())
#define setinf(x) memset(x,126,sizeof(x))
#define REVFOR(x,a,n) for(int x=a;x>=n;x--)







struct data{
    string s;
    int val;
    data(string stemp,int valu)
    {
        s=stemp;
        val=valu;
    }
    bool operator() (const data &a,const data &b)
    {
        return a.s<b.s;
    }
};

vector<data>v;



int main()
{
    //read("incb.txt");
    map<string,int>mp;
    int n;
    string country,beuties;
    scanf("%d",&n);
    while(n--)
    {
        cin>>country;
        getline(cin,beuties);
        mp[country]++;
    }
    for (std::map<string,int>::iterator it=mp.begin(); it!=mp.end(); ++it)
    {
        v.pb(data(it->first,it->second));
    }
    for(int i=0;i<(int)v.size();i++)
    {
        cout<<v[i].s<<" "<<v[i].val<<"\n";
    }
}
