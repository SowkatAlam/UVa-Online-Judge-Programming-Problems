#include<cstdio>
#include<sstream>
#include<cstdlib>
#include<cctype>
#include<cmath>
#include<algorithm>
#include<set>
#include<queue>
#include<stack>
#include<list>
#include<iostream>
#include<fstream>
#include<numeric>
#include<string>
#include<vector>
#include<cstring>
#include<map>
#include<iterator>
using namespace std;

#define coin_array_size 5

int coin_list[coin_array_size]={50,25,10,5,1};

int dp[10000][10000]={0};

int solve_it_with_dynamic_programming(int state,int current_amount)
{
    if(state==coin_array_size)
    {
        if(current_amount==0)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
    if(dp[state][current_amount]!=0)return dp[state][current_amount];
    else
    {
        int ret1=0,ret2=0;
        if(current_amount-coin_list[state]>=0)
        {
            ret1=solve_it_with_dynamic_programming(state,current_amount-coin_list[state]);
        }
        ret2=solve_it_with_dynamic_programming(state+1,current_amount);
        dp[state][current_amount]=ret1+ret2;
        return dp[state][current_amount];
    }
}

int main()
{
    int input_coin;

    while(scanf("%d",&input_coin)==1)
    {
        cout<<solve_it_with_dynamic_programming(0,input_coin)<<endl;
    }
}
