#include<cstdio>
#include<sstream>
#include<cstdlib>
#include<cctype>
#include<cmath>
#include<algorithm>
#include<set>
#include<queue>
#include<stack>
#include<list>
#include<iostream>
#include<fstream>
#include<numeric>
#include<string>
#include<vector>
#include<cstring>
#include<map>
#include<iterator>
using namespace std;
#define ull unsigned long long int
vector<ull>v;

void process()
{
        int length=v.size();
        int cost[length];
        int parent[length];
        int maxans=0,maxansindex=0;
        for(int i=0;i<length;i++)
        {
            cost[i]=1;
            for(int j=0;j<i;j++)
            {
                if(v[j]<v[i])
                {
                    if(cost[i]<cost[j]+1)
                    {
                        cost[i]=cost[j]+1;
                        parent[i]=j;
                        if(maxans<cost[i])
                        {
                            maxans=cost[i];
                            maxansindex=i;
                        }
                    }
                }
            }
        }
        if(maxans==0)
        {
            maxans=1;

            printf("Max hits: 1\n%llu\n",v[0]);

            return ;
        }
        printf("Max hits: %d\n",maxans);
        int node=maxansindex;
        stack<ull>s;
        for(int i=0;i<maxans;i++)
        {
            s.push(v[node]);
            node=parent[node];
        }
        while(!s.empty())
        {
            printf("%llu\n",s.top());
            s.pop();
        }
}
int main()
{
    //freopen("incb.txt","r",stdin);
    int testcase,value;
    char c[30],c1[10];
    cin>>testcase;
    gets(c1);
    gets(c1);
    while(testcase--)
    {
        while(gets(c)&&strlen(c))
        {
            v.push_back(atoi(c));
        }
        process();
        if(testcase!=0)
        {
            printf("\n");
        }
        v.clear();
    }
}


/*

vector<unsigned long long int>v;

int main()
{
    freopen("incb.txt","r",stdin);
    int testcase,value;
    char c[30],c1[20];
    cin>>testcase;
    gets(c1);
    gets(c1);
    while(testcase--)
    {

        while(gets(c)&&strlen(c))
        {
            v.push_back(atoi(c));
        }
        cout<<testcase<<endl;
        for(int i=0;i<v.size();i++)
        {
            cout<<v[i]<<"  ";
        }

        v.clear();
    }
}
*/
