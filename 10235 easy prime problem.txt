/*
*************************************************
*                                               *
*                Sowkat ALam                    *
*                                               *
*    Email = sowkat.alam07@gmail.com            *
*                                               *
*                                               *
*************************************************
*/
#include <bits/stdc++.h>
using namespace std;

typedef vector<int>vi;
typedef map<char,int>mapp;


#define endl '\n'
#define mp make_pair
#define pb push_back
#define pi acos(-1.0)
#define mod 1000000007
#define ll long long int
#define dsort(c) sort(all(c))
#define sci(x) scanf("%d",&x)
#define scc(x) scanf("%c",&x)
#define scd(x) scanf("%lf",&x)
#define sz(x) ((int) (x).size())
#define all(c) c.begin(), c.end()
#define ull unsigned long long int
#define read(x) freopen(x,"r",stdin)
#define sci2(x,y) scanf("%d%d",&x,&y)
#define scc2(x,y) scanf("%c%c",&x,&y)
#define write(x) freopen(x,"w",stdout)
#define dset(x) memset(x,-1,sizeof(x))
#define scd2(x,y) scanf("%lf%lf",&x,&y)
#define dclear(x) memset(x,0,sizeof(x))
#define loop(x,a,n) for(int x=a;x<n;x++)
#define setinf(x) memset(x,126,sizeof(x))
#define loope(x,a,n) for(int x=a;x<=n;x++)
#define sci3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define scd3(x,y,z) scanf("%lf%lf%lf",&x,&y,&z)
#define trall(container, it)\
for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)

//loop , loope , ULL , mp , pb , all , set1 , set0 , abs , setinf , trall , sz
//--------------------------------********************----------------------------------

//--------------------------------********************----------------------------------

#define maxx 1000005
bool flag[maxx+1]={false};

void generate_prime()
{
    int limit=sqrt(maxx)+2;
    for(int i=3;i<=maxx;i+=2)
    {
        if(flag[i]==false)
        {
            if(i<=limit)
            {
                for(ull j=i*i;j<=maxx;j+=(2*i))flag[j]=true;
            }

        }

    }
}
int reverse_num(int n)
{
    int ans=0;
    ans+=n%10;
    n=n/10;

    int hun=10;
    while(n>0)
    {
        ans=(hun*ans)+n%10;
        n=n/10;

    }
    return ans;
}
int main()
{
    /*
    write("outcb.txt");
    for(int i=1;i<=1000;i++)cout<<i<<"\n";
    return 0;
    //cout<<reverse_num(10000);
    //return 0;
    */
   
    
    generate_prime();
    int n;
    while(sci(n)==1)
    {
        if(n<=1)
        {
            printf("%d is not prime.\n",n);
            continue;
        }
        if(n==2)
        {
            printf("2 is prime.\n");
        }
        else
        {
            if(n%2==0)
            {
                printf("%d is not prime.\n",n);
            }
            else
            {
                if(flag[n]==false)
                {
                    int rev=reverse_num(n);
                    if(rev!=n&&flag[rev]==false&&rev%2!=0)
                    {
                        printf("%d is emirp.\n",n);
                    }
                    else
                    {
                        printf("%d is prime.\n",n);
                    }

                }
                else
                {
                    printf("%d is not prime.\n",n);
                }
            }
        }
    }
}
